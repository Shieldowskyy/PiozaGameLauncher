name: Build AppImage

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v0.6.8)'
        required: true
        default: 'v0.0.1'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up version
        id: vars
        run: |
          VERSION="${{ github.event.inputs.version }}"
          VERSION_NO_V="${VERSION//v/}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "VERSION_NO_V=$VERSION_NO_V" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl file

      - name: Download appimagetool if not present
        run: |
          if [ ! -f "./appimagetool-x86_64.AppImage" ]; then
            echo "Downloading appimagetool..."
            curl -L https://github.com/AppImage/AppImageKit/releases/download/12/appimagetool-x86_64.AppImage -o appimagetool-x86_64.AppImage
            chmod +x appimagetool-x86_64.AppImage
          fi

      - name: Strip debug symbols
        run: |
          find . -type f -name "*.so" -exec sh -c 'strip --strip-unneeded "$1" 2>/dev/null || true' sh {} \;


      - name: Extract and use appimagetool without FUSE
        run: |
          ./appimagetool-x86_64.AppImage --appimage-extract
          chmod +x squashfs-root/AppRun
          ARCH=x86_64 ./squashfs-root/AppRun Build/Linux/AppImage/PiozaLauncher.AppDir
          APPIMAGE_PATH=$(ls Pioza_Launcher-*-x86_64.AppImage)
          mv "$APPIMAGE_PATH" "PiozaLauncher-v$VERSION_NO_V-x86_64.AppImage"

      - name: Upload AppImage artifact
        uses: actions/upload-artifact@v4
        with:
          name: PiozaLauncher-AppImage
          path: PiozaLauncher-v*.AppImage
